<mah:MetroWindow x:Class="bagpipe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:gb="clr-namespace:System.Globalization;assembly=mscorlib"
        xmlns:local="clr-namespace:bagpipe"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:ProfileViewModel}"
        Title="Bagpipe"
        Width="400" Height="500" 
        MinWidth="400" MinHeight="500"
        ShowDialogsOverTitleBar="False">

    <mah:MetroWindow.MetroDialogOptions>
        <mah:MetroDialogSettings OwnerCanCloseWithDialog="True" />
    </mah:MetroWindow.MetroDialogOptions>

    <Window.Resources>
        <local:CastingConverter x:Key="DoubleCastingConverter" ResultType="{x:Type sys:Double}" />
        <local:HexByteArrayConverter x:Key="HexByteArrayConverter" />
        <local:SettingsTypeTemplateSelector x:Key="SettingsTypeTemplateSelector" />

        <local:BooleanToZeroWidthConverter x:Key="TypeWidthConverter" Width="{x:Static sys:Double.NaN}"/>
        <local:BooleanToZeroWidthConverter x:Key="OwnerWidthConverter" Width="{x:Static sys:Double.NaN}"/>
        <local:BooleanToZeroWidthConverter x:Key="AdvertisementWidthConverter" Width="{x:Static sys:Double.NaN}"/>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <DataTemplate x:Key="EmptySettingsTemplate">
            <TextBlock>Empty</TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="Int32SettingsTemplate">
            <mah:NumericUpDown Minimum="{Binding Source={x:Static sys:Int32.MinValue},
                                                 Mode=OneTime,
                                                 Converter={StaticResource DoubleCastingConverter},
                                                 ConverterParameter={x:Type sys:Int32}}"
                               Maximum="{Binding Source={x:Static sys:Int32.MaxValue},
                                                 Mode=OneTime,
                                                 Converter={StaticResource DoubleCastingConverter},
                                                 ConverterParameter={x:Type sys:Int32}}"
                               Value="{Binding Value,
                                               Converter={StaticResource DoubleCastingConverter},
                                               ConverterParameter={x:Type sys:Int32}}"
                               NumericInputMode="Numbers"
                               ParsingNumberStyle="Integer,AllowThousands" />
        </DataTemplate>
        <DataTemplate x:Key="Int64SettingsTemplate">
            <mah:NumericUpDown Minimum="{Binding Source={x:Static sys:Int64.MinValue},
                                                 Mode=OneTime,
                                                 Converter={StaticResource DoubleCastingConverter},
                                                 ConverterParameter={x:Type sys:Int64}}"
                               Maximum="{Binding Source={x:Static sys:Int64.MaxValue},
                                                 Mode=OneTime,
                                                 Converter={StaticResource DoubleCastingConverter},
                                                 ConverterParameter={x:Type sys:Int64}}"
                               Value="{Binding Value,
                                               Converter={StaticResource DoubleCastingConverter},
                                               ConverterParameter={x:Type sys:Int64}}"
                               NumericInputMode="Numbers"
                               ParsingNumberStyle="Integer,AllowThousands" />
        </DataTemplate>
        <DataTemplate x:Key="DoubleSettingsTemplate">
            <!-- TODO: can't actually input decimals? -->
            <mah:NumericUpDown Value="{Binding Value}"
                               NumericInputMode="Decimal"
                               ParsingNumberStyle="Number" />
        </DataTemplate>
        <DataTemplate x:Key="StringSettingsTemplate">
            <TextBox Text="{Binding Value}"
                     TextWrapping="Wrap"
                     MaxLines="5"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"/>
        </DataTemplate>
        <DataTemplate x:Key="FloatSettingsTemplate">
            <mah:NumericUpDown Minimum="{Binding Source={x:Static sys:Single.MinValue},
                                                 Mode=OneTime,
                                                 Converter={StaticResource DoubleCastingConverter},
                                                 ConverterParameter={x:Type sys:Single}}"
                               Maximum="{Binding Source={x:Static sys:Single.MaxValue},
                                                 Mode=OneTime,
                                                 Converter={StaticResource DoubleCastingConverter},
                                                 ConverterParameter={x:Type sys:Single}}"
                               Value="{Binding Value,
                                               Converter={StaticResource DoubleCastingConverter},
                                               ConverterParameter={x:Type sys:Single}}"
                               NumericInputMode="Decimal"
                               ParsingNumberStyle="Number" />
        </DataTemplate>
        <DataTemplate x:Key="BlobSettingsTemplate">
            <TextBox TextWrapping="Wrap"
                     MaxLines="5"
                     ScrollViewer.VerticalScrollBarVisibility="Auto">
                <TextBox.Text>
                    <Binding Path="Value" Converter="{StaticResource HexByteArrayConverter}">
                        <Binding.ValidationRules>
                            <local:HexByteArrayConverter />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </DataTemplate>
        <DataTemplate x:Key="DateTimeSettingsTemplate">
            <mah:DateTimePicker Culture="{x:Static gb:CultureInfo.CurrentCulture}"
                                SelectedDateTime="{Binding Value}"/>
        </DataTemplate>
        <DataTemplate x:Key="ByteSettingsTemplate">
            <mah:NumericUpDown Minimum="{Binding Source={x:Static sys:Byte.MinValue},
                                                 Mode=OneTime,
                                                 Converter={StaticResource DoubleCastingConverter},
                                                 ConverterParameter={x:Type sys:Byte}}"
                               Maximum="{Binding Source={x:Static sys:Byte.MaxValue},
                                                 Mode=OneTime,
                                                 Converter={StaticResource DoubleCastingConverter},
                                                 ConverterParameter={x:Type sys:Byte}}"
                               Value="{Binding Value,
                                               Converter={StaticResource DoubleCastingConverter},
                                               ConverterParameter={x:Type sys:Byte}}"
                               NumericInputMode="Numbers"
                               ParsingNumberStyle="Integer,AllowThousands" />
        </DataTemplate>

        <Style TargetType="{x:Type Button}" BasedOn="{mah:StaticResource MahApps.Styles.Button}">
            <Setter Property="mah:ControlsHelper.ContentCharacterCasing"
                    Value="Upper" />
        </Style>

        <ObjectDataProvider x:Key="OwnerEnumValues" ObjectType="{x:Type sys:Enum}" MethodName="GetValues" >
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:OnlineProfilePropertyOwner"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="AdvertisementEnumValues" ObjectType="{x:Type sys:Enum}" MethodName="GetValues" >
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:OnlineDataAdvertisementType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="GameEnumValues" ObjectType="{x:Type sys:Enum}" MethodName="GetValues" >
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:Game"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <mah:MetroAnimatedTabControl x:Name="TabRoot" Grid.Row="0">
            <TabItem Header="RAW" mah:ControlsHelper.ContentCharacterCasing="Upper">
                <Grid Width="{Binding Width, ElementName=TabRoot}"
                      Height="{Binding Height, ElementName=TabRoot}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListView x:Name="RawListView"
                              Grid.Row="0"
                              ItemsSource="{Binding Entries}"
                              KeyDown="RawListView_KeyDown"
                              dd:DragDrop.IsDragSource="{Binding IsOn, ElementName=AdvancedSwitch}"
                              dd:DragDrop.IsDropTarget="{Binding IsOn, ElementName=AdvancedSwitch}"
                              dd:DragDrop.DropHandler="{Binding DropHandler}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Name"
                                                DisplayMemberBinding="{Binding Name}" />
                                <GridViewColumn DisplayMemberBinding="{Binding Type}"
                                                Width="{
                                                    Binding IsOn,
                                                    ElementName=AdvancedSwitch,
                                                    Mode=TwoWay,
                                                    Converter={StaticResource TypeWidthConverter}
                                                }">
                                    <GridViewColumnHeader Content="Type"
                                                          Visibility="{
                                                              Binding IsOn,
                                                              ElementName=AdvancedSwitch,
                                                              Converter={StaticResource BooleanToVisibilityConverter}
                                                          }" />
                                </GridViewColumn>
                                <GridViewColumn Header="Value"
                                                Width="175"
                                                CellTemplateSelector="{StaticResource SettingsTypeTemplateSelector}"/>
                                <GridViewColumn Width="{
                                                    Binding IsOn,
                                                    ElementName=AdvancedSwitch,
                                                    Mode=TwoWay,
                                                    Converter={StaticResource OwnerWidthConverter}
                                                }">
                                    <GridViewColumnHeader Content="Owner"
                                                          Visibility="{
                                                              Binding IsOn,
                                                              ElementName=AdvancedSwitch,
                                                              Converter={StaticResource BooleanToVisibilityConverter}
                                                          }" />
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding Source={StaticResource OwnerEnumValues}}"
                                                      SelectedValue="{Binding Owner}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Width="{
                                                    Binding IsOn,
                                                    ElementName=AdvancedSwitch,
                                                    Mode=TwoWay,
                                                    Converter={StaticResource AdvertisementWidthConverter}
                                                }">
                                    <GridViewColumnHeader Content="Advertisement Type"
                                                          Visibility="{
                                                              Binding IsOn,
                                                              ElementName=AdvancedSwitch,
                                                              Converter={StaticResource BooleanToVisibilityConverter}
                                                          }" />
                                        <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding Source={StaticResource AdvertisementEnumValues}}"
                                                      SelectedValue="{Binding AdvertisementType}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Grid.Row="1" Margin="10,5,10,5" Orientation="Horizontal">
                        <Button Content="New"
                                HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                Click="NewButton_Click"
                                IsEnabled="{Binding IsOn, ElementName=AdvancedSwitch}" />
                        <Button Content="Delete"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                Click="DeleteButton_Click">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOn, ElementName=AdvancedSwitch}" Value="False">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=RawListView}" Value="-1">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <mah:ToggleSwitch x:Name="AdvancedSwitch"
                                          Content="Advanced Edits"
                                          Margin="5,-2.7,0,-2"
                                          HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    </StackPanel>
                </Grid>
            </TabItem>
        </mah:MetroAnimatedTabControl>
        <DockPanel Grid.Row="1" Margin="10,5,10,10">
            <ComboBox DockPanel.Dock="Left"
                      Height="27.3" Width="64"
                      HorizontalAlignment="Left" VerticalAlignment="Bottom"
                      ItemsSource="{Binding Source={StaticResource GameEnumValues}}"
                      SelectedValue="{Binding DisplayGame}" />
            <Button DockPanel.Dock="Right"
                    Content="Save"
                    Height="27.3"
                    HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    Click="SaveButton_Click" />
            <Button DockPanel.Dock="Right"
                    Content="Open"
                    Margin="0,0,5,0"
                    Height="27.3"
                    HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    Click="OpenButton_Click" />
        </DockPanel>
    </Grid>
</mah:MetroWindow>
